// Generated by view binder compiler. Do not edit!
package com.example.mini_proj.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mini_proj.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuestionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button button4;

  @NonNull
  public final EditText editTextText;

  @NonNull
  public final EditText editTextText2;

  @NonNull
  public final EditText editTextText3;

  @NonNull
  public final EditText editTextText4;

  @NonNull
  public final EditText editTextTextMultiLine;

  @NonNull
  public final RadioButton radioButton;

  @NonNull
  public final RadioButton radioButton2;

  @NonNull
  public final RadioButton radioButton3;

  @NonNull
  public final RadioButton radioButton4;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final TextView textView2;

  private QuestionBinding(@NonNull RelativeLayout rootView, @NonNull Button button4,
      @NonNull EditText editTextText, @NonNull EditText editTextText2,
      @NonNull EditText editTextText3, @NonNull EditText editTextText4,
      @NonNull EditText editTextTextMultiLine, @NonNull RadioButton radioButton,
      @NonNull RadioButton radioButton2, @NonNull RadioButton radioButton3,
      @NonNull RadioButton radioButton4, @NonNull RadioGroup radioGroup,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.button4 = button4;
    this.editTextText = editTextText;
    this.editTextText2 = editTextText2;
    this.editTextText3 = editTextText3;
    this.editTextText4 = editTextText4;
    this.editTextTextMultiLine = editTextTextMultiLine;
    this.radioButton = radioButton;
    this.radioButton2 = radioButton2;
    this.radioButton3 = radioButton3;
    this.radioButton4 = radioButton4;
    this.radioGroup = radioGroup;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuestionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuestionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.question, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuestionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.editTextText;
      EditText editTextText = ViewBindings.findChildViewById(rootView, id);
      if (editTextText == null) {
        break missingId;
      }

      id = R.id.editTextText2;
      EditText editTextText2 = ViewBindings.findChildViewById(rootView, id);
      if (editTextText2 == null) {
        break missingId;
      }

      id = R.id.editTextText3;
      EditText editTextText3 = ViewBindings.findChildViewById(rootView, id);
      if (editTextText3 == null) {
        break missingId;
      }

      id = R.id.editTextText4;
      EditText editTextText4 = ViewBindings.findChildViewById(rootView, id);
      if (editTextText4 == null) {
        break missingId;
      }

      id = R.id.editTextTextMultiLine;
      EditText editTextTextMultiLine = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextMultiLine == null) {
        break missingId;
      }

      id = R.id.radioButton;
      RadioButton radioButton = ViewBindings.findChildViewById(rootView, id);
      if (radioButton == null) {
        break missingId;
      }

      id = R.id.radioButton2;
      RadioButton radioButton2 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton2 == null) {
        break missingId;
      }

      id = R.id.radioButton3;
      RadioButton radioButton3 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton3 == null) {
        break missingId;
      }

      id = R.id.radioButton4;
      RadioButton radioButton4 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton4 == null) {
        break missingId;
      }

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new QuestionBinding((RelativeLayout) rootView, button4, editTextText, editTextText2,
          editTextText3, editTextText4, editTextTextMultiLine, radioButton, radioButton2,
          radioButton3, radioButton4, radioGroup, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
